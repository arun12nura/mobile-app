import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    _appTheme = _newTheme;
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA700,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: appTheme.whiteA700,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(20.h),
          ),
          shadowColor: appTheme.black90002.withOpacity(0.25),
          elevation: 4,
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 197,
        space: 197,
        color: appTheme.teal900,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 16.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.gray40001,
          fontSize: 15.fSize,
          fontFamily: 'Lato',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.black90002.withOpacity(0.73),
          fontSize: 12.fSize,
          fontFamily: 'Lato',
          fontWeight: FontWeight.w400,
        ),
        displaySmall: TextStyle(
          color: appTheme.black90002,
          fontSize: 35.fSize,
          fontFamily: 'Inknut Antiqua',
          fontWeight: FontWeight.w700,
        ),
        headlineLarge: TextStyle(
          color: appTheme.gray90002,
          fontSize: 30.fSize,
          fontFamily: 'Lato',
          fontWeight: FontWeight.w700,
        ),
        headlineMedium: TextStyle(
          color: appTheme.gray5001,
          fontSize: 26.fSize,
          fontFamily: 'Roboto',
          fontWeight: FontWeight.w400,
        ),
        labelLarge: TextStyle(
          color: appTheme.gray90002,
          fontSize: 12.fSize,
          fontFamily: 'Lato',
          fontWeight: FontWeight.w700,
        ),
        labelSmall: TextStyle(
          color: appTheme.black90002.withOpacity(0.46),
          fontSize: 8.fSize,
          fontFamily: 'Inknut Antiqua',
          fontWeight: FontWeight.w700,
        ),
        titleLarge: TextStyle(
          color: appTheme.black90002,
          fontSize: 20.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        titleMedium: TextStyle(
          color: appTheme.black90002,
          fontSize: 18.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
        titleSmall: TextStyle(
          color: appTheme.black90002,
          fontSize: 14.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light();
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Black
  Color get black900 => Color(0XFF0E0E0E);
  Color get black90001 => Color(0XFF030303);
  Color get black90002 => Color(0XFF000000);

  // BlueGray
  Color get blueGray100 => Color(0XFFD9D9D9);

  // BlueGrayB
  Color get blueGray100B7 => Color(0XB7C1D5D3);

  // DeepPurple
  Color get deepPurple600 => Color(0XFF623AA2);

  // Gray
  Color get gray100 => Color(0XFFF7F2F1);
  Color get gray300 => Color(0XFFE0E0E0);
  Color get gray400 => Color(0XFFBEBEBE);
  Color get gray40001 => Color(0XFFC7C7C7);
  Color get gray50 => Color(0XFFFFFAFA);
  Color get gray500 => Color(0XFF9A9A9A);
  Color get gray5001 => Color(0XFFFDF7F7);
  Color get gray600 => Color(0XFF777777);
  Color get gray900 => Color(0XFF0F1728);
  Color get gray90001 => Color(0XFF262825);
  Color get gray90002 => Color(0XFF262626);
  Color get gray90003 => Color(0XFF131313);

  // Green
  Color get green500 => Color(0XFF34DD59);

  // LightGreen
  Color get lightGreen200 => Color(0XFFD4D7AA);

  // Pink
  Color get pink300 => Color(0XFFF97794);

  // Red
  Color get red600 => Color(0XFFEA3434);
  Color get redA700 => Color(0XFFFF0505);

  // Teal
  Color get teal100 => Color(0XFFB5E4D7);
  Color get teal200 => Color(0XFF7EC7B2);
  Color get teal20068 => Color(0X688ED5C1);
  Color get teal300 => Color(0XFF54B6AB);
  Color get teal400 => Color(0XFF3AB793);
  Color get teal900 => Color(0XFF045D42);
  Color get teal90001 => Color(0XFF075A42);

  // TealE
  Color get teal400E8 => Color(0XE839AA8A);
  Color get teal400E801 => Color(0XE83CAC8C);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
